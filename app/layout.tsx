import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import {NavBar} from "../Features/Navbar";

import { cookies  } from "next/headers";





const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  /* let logInBool:boolean;
  try{
    const cookieStore= await cookies();
const token = cookieStore.get("token")?.value;

const headers: HeadersInit = {};
if (token) {
  headers.Cookie = `token=${token}`;
}

    let logInAuthResponse : Response;

    const apiUrl = process.env.NEXT_PUBLIC_API_URL;
  
   logInAuthResponse =  await fetch(`${apiUrl}/user/loginAuth`,{headers });
   const data = await logInAuthResponse.json();
   logInBool= data.authStatus;
   console.log("logIn bool is "+logInBool);

  
  }
  catch(err){
    //console.error(" this err is "+err);
    logInBool = false;
  }*/

  

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NavBar  />
        {children}
      </body>
    </html>
  );
}
